{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(Button, {\n      color: \"red\",\n      title: \"Click me!\",\n      onPress: function onPress() {\n        return Alert.prompt(\"Mi titulo\", \"mi mensaje\", function (text) {\n          return console.log(text);\n        }, [{\n          text: \"yes\",\n          onPress: function onPress() {\n            return console.log(\"asies\");\n          }\n        }, {\n          text: \"no\",\n          onPress: function onPress() {\n            return console.log(\"nel pana\");\n          }\n        }]);\n      }\n    })\n  });\n}\nfunction SandBox(params) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Text, {\n      numberOfLines: 3,\n      onPress: function onPress() {\n        return console.clear();\n      },\n      children: \"Esta es mi app con react native. asdlakjhsdlkfjahslkdfjhalksjdflakjsdlkjfahslkdjfalksjhdflkjaslkdjflakjshasda.s,dma/.s,dm/a.,smd/a.,smd/.dlkjh\"\n    }), _jsx(TouchableHighlight, {\n      onPress: function onPress() {\n        return console.log(\"image taped\");\n      },\n      onLongPress: function onLongPress() {\n        return console.log(\"Long presssssss\");\n      },\n      children: _jsx(Image, {\n        source: require(\"./assets/favicon.png\")\n      })\n    }), _jsx(TouchableNativeFeedback, {\n      children: _jsx(View, {\n        style: {\n          width: 100,\n          height: 30,\n          backgroundColor: \"red\"\n        }\n      })\n    }), _jsx(Image, {\n      blurRadius: 0,\n      fadeDuration: 5000,\n      source: {\n        uri: \"https://picsum.photos/200/300\",\n        width: 200,\n        height: 300\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","App","styles","container","Alert","prompt","text","console","log","onPress","SandBox","params","clear","require","width","height","backgroundColor","uri","StyleSheet","create","flex","alignContent","alignItems","justifyContent"],"sources":["C:/Users/roche/Desktop/DoneWithIt/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View,Image, SafeAreaView, TouchableWithoutFeedback,TouchableOpacity, TouchableHighlight, TouchableNativeFeedback, Button, Alert} from 'react-native';\n\nexport default function App() {\n// console.log(require(\"./assets/favicon.png\")) // el require regresa un # de referencia de la imagen que estamos utilizando\n  return (\n    <SafeAreaView style={styles.container}>\n      <Button  color={\"red\"} \n      title='Click me!'\n      // onPress={()=>alert('button tapped')}\n      onPress={()=>Alert.prompt(\"Mi titulo\", \"mi mensaje\",       (text) => console.log(text),\n\n      [\n        {text:\"yes\", onPress:() => console.log(\"asies\")},\n        {text:\"no\", onPress:() => console.log(\"nel pana\")},\n      ],\n      )}\n      \n      />\n\n     {/* <SandBox/> */}\n    </SafeAreaView>\n  );\n}\n\nfunction SandBox(params) {\n  return(<>\n   <Text \n      numberOfLines={3} //limita el # de lineas en el que el texto se truncara\n      onPress={()=> console.clear()}\n      > \n        Esta es mi app con react native. asdlakjhsdlkfjahslkdfjhalksjdflakjsdlkjfahslkdjfalksjhdflkjaslkdjflakjshasda.s,dma/.s,dm/a.,smd/a.,smd/.dlkjh\n        </Text>\n        {/* TouchableOpacity: fade al hacer click */}\n        {/* TouchableWithoutFeedback: sin efecto al touch */}\n        {/* TouchableHighlight: se obscurce al realizar un touch */}\n        {/* TouchableNativeFeedback: es u touch solo de android, efecto naticvo */}\n        <TouchableHighlight onPress={() => console.log(\"image taped\")} onLongPress={()=> console.log(\"Long presssssss\")}>\n          <Image source={require(\"./assets/favicon.png\")}/> \n\n        </TouchableHighlight>\n        <TouchableNativeFeedback>\n          <View style={{\n            width:100,\n            height:30,\n            backgroundColor:\"red\"\n          }}></View>\n        </TouchableNativeFeedback>\n        {/* //local image */}\n        <Image \n        blurRadius={0} // cantidad de blur\n        fadeDuration={5000} // tiempo de fade en aparecer\n        source={{\n          uri:\"https://picsum.photos/200/300\",\n          width: 200,\n          height : 300,\n        }}/> \n\n      {/* esto es el estilo de la barra de opciones de arriba */}\n      <StatusBar style=\"auto\" /> \n  </>)\n  \n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignContent: \"center\",\n    alignItems:\"center\",\n    justifyContent:\"center\"\n  \n  },\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG5C,eAAe,SAASC,GAAG,GAAG;EAE5B,OACE,KAAC,YAAY;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UACpC,KAAC,MAAM;MAAE,KAAK,EAAE,KAAM;MACtB,KAAK,EAAC,WAAW;MAEjB,OAAO,EAAE;QAAA,OAAIC,KAAK,CAACC,MAAM,CAAC,WAAW,EAAE,YAAY,EAAQ,UAACC,IAAI;UAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QAAA,GAEtF,CACE;UAACA,IAAI,EAAC,KAAK;UAAEG,OAAO,EAAC;YAAA,OAAMF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UAAA;QAAA,CAAC,EAChD;UAACF,IAAI,EAAC,IAAI;UAAEG,OAAO,EAAC;YAAA,OAAMF,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;UAAA;QAAA,CAAC,CACnD,CACA;MAAA;IAAC;EAEA,EAGW;AAEnB;AAEA,SAASE,OAAO,CAACC,MAAM,EAAE;EACvB,OAAO;IAAA,WACN,KAAC,IAAI;MACF,aAAa,EAAE,CAAE;MACjB,OAAO,EAAE;QAAA,OAAKJ,OAAO,CAACK,KAAK,EAAE;MAAA,CAAC;MAAA,UAC7B;IAEC,EAAO,EAKP,KAAC,kBAAkB;MAAC,OAAO,EAAE;QAAA,OAAML,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAAA,CAAC;MAAC,WAAW,EAAE;QAAA,OAAKD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAAA,CAAC;MAAA,UAC9G,KAAC,KAAK;QAAC,MAAM,EAAEK,OAAO;MAAyB;IAAE,EAE9B,EACrB,KAAC,uBAAuB;MAAA,UACtB,KAAC,IAAI;QAAC,KAAK,EAAE;UACXC,KAAK,EAAC,GAAG;UACTC,MAAM,EAAC,EAAE;UACTC,eAAe,EAAC;QAClB;MAAE;IAAQ,EACc,EAE1B,KAAC,KAAK;MACN,UAAU,EAAE,CAAE;MACd,YAAY,EAAE,IAAK;MACnB,MAAM,EAAE;QACNC,GAAG,EAAC,+BAA+B;QACnCH,KAAK,EAAE,GAAG;QACVC,MAAM,EAAG;MACX;IAAE,EAAE,EAGN,KAAC,SAAS;MAAC,KAAK,EAAC;IAAM,EAAG;EAAA,EAC3B;AAEL;AACA,IAAMb,MAAM,GAAGgB,UAAU,CAACC,MAAM,CAAC;EAC/BhB,SAAS,EAAE;IACTiB,IAAI,EAAE,CAAC;IACPJ,eAAe,EAAE,OAAO;IACxBK,YAAY,EAAE,QAAQ;IACtBC,UAAU,EAAC,QAAQ;IACnBC,cAAc,EAAC;EAEjB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}